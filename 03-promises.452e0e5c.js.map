{"mappings":"AAAA,MAAMA,EAASC,SAASC,cAAc,SACxBD,SAASC,cAAc,gBACrBD,SAASC,cAAc,SAEvCF,EAAOG,iBAAiB,UAMxB,SAAsBC,GACpBA,EAAIC,iBACJ,IAAIC,EAAW,EACfC,EAAaH,EAAII,cAAcC,SAASC,MAAMC,MAC9CC,EAAYR,EAAII,cAAcC,SAASI,KAAKF,MAC5CG,EAASV,EAAII,cAAcC,SAASM,OAAOJ,MAC3CD,MAAQM,OAAOT,GAEf,MAAMU,EAAaC,aAAY,KACzBZ,IAAaU,OAAOF,IAIxBR,GAAY,EAYhB,SAAuBa,EAAUT,GAC/B,OAAO,IAAIU,SAAQ,CAACC,EAASC,KACRJ,aAAY,KACPK,KAAKC,SAAW,GAEpCH,EAAQ,C,SAAEF,E,MAAUT,IAEpBY,EAAO,C,SAAEH,E,MAAUT,GAAQ,GAE5BM,OAAOT,GAAY,G,CApBtBkB,CAAcnB,EAAUI,OACrBgB,MAAK,EAACP,SAAEA,EAAQT,MAAEA,MACjBiB,QAAQC,IAAI,uBAAqBT,QAAiBT,MAAU,IAE7DmB,OAAM,EAACV,SAAEA,EAAQT,MAAEA,MAClBiB,QAAQG,KAAK,sBAAoBX,QAAeT,MAAU,IAE9DA,OAASM,OAAOJ,IAXdmB,cAAcd,EAWU,GACzBD,OAAOJ,G,IA1BZ,IAAIA,EAAY,GACZE,EAAS,GACTP,EAAa","sources":["src/js/03-promises.js"],"sourcesContent":["const formEl = document.querySelector('.form');\nconst btnEl = document.querySelector('.form button');\nconst inputEl = document.querySelector('input');\n\nformEl.addEventListener('submit', onFormSubmit);\n\nlet delayStep = '';\nlet amount = '';\nlet firstDelay = '';\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  let position = 0;\n  firstDelay = evt.currentTarget.elements.delay.value;\n  delayStep = evt.currentTarget.elements.step.value;\n  amount = evt.currentTarget.elements.amount.value;\n  delay = Number(firstDelay);\n\n  const intervalId = setInterval(() => {\n    if (position === Number(amount)) {\n      clearInterval(intervalId);\n      return;\n    }\n    position += 1;\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.warn(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += Number(delayStep);\n  }, Number(delayStep));\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const intervalId = setInterval(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, Number(firstDelay));\n  });\n}\n"],"names":["$47d4ff9957288465$var$formEl","document","querySelector","addEventListener","evt","preventDefault","position1","$47d4ff9957288465$var$firstDelay","currentTarget","elements","delay","value","$47d4ff9957288465$var$delayStep","step","$47d4ff9957288465$var$amount","amount","Number","intervalId","setInterval","position","Promise","resolve","reject","Math","random","$47d4ff9957288465$var$createPromise","then","console","log","catch","warn","clearInterval"],"version":3,"file":"03-promises.452e0e5c.js.map"}